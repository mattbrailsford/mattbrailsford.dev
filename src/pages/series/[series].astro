---
import { getCollection } from "astro:content";
import PostLink from "../../components/PostLink.astro";
import Layout from "../../layouts/Default.astro";
import type {PostSeries} from "../../types";
import {sortPostsPublishedDateAsc} from "../../utils";

interface Props {
    series: PostSeries
}
    
export const getStaticPaths = (async () => {
    const posts = await getCollection('blogPosts');
    const series : PostSeries[] = posts
        .filter(post => post.data.series)
        .map(post => post.data.series!)
        .reduce((acc: PostSeries[], cur : PostSeries) => {
            if (acc.every(x => x.id !== cur.id)) {
                acc.push(cur);
            }
            return acc;
        }, [])
    return series.map(s => ({
        params: {
            series: s.id
        },
        props: {
            series: s
        }
    }))
});

const { series } = Astro.props as Props;
const posts = (await getCollection('blogPosts', (post) => post.data.series?.id === series.id))
    .map(post => post.data)
    .sort(sortPostsPublishedDateAsc);
---
<Layout title={series!.name} description={`Blog posts in the ${series!.name} series`}>
    <!--<h1 class="text-3xl lg:text-5xl lg:pl-0 font-bold">{series!.name}</h1>-->
    <ul>
        {posts.map(post => (
            <li class="py-7 border-b md:py-8">
                <PostLink post={post} />
            </li>
        ))}
    </ul>
</Layout>